Zadanie 1.

DELIMITER $$

CREATE TRIGGER kreatura_bi BEFORE INSERT ON kreatura FOR EACH ROW
BEGIN
    DECLARE msg VARCHAR(130);
    IF NEW.waga < 0 THEN
    SET msg = concat('Probujesz ustawic wartosc pola waga jako ujemną: !',  cast(new.waga AS CHAR));
        signal sqlstate '45000' set message_text = msg;
    END IF;
END$$

DELIMITER $$
CREATE TRIGGER kreatura_bu BEFORE UPDATE ON kreatura FOR EACH ROW
BEGIN
    DECLARE msg VARCHAR(130);
    IF NEW.waga < 0 THEN
    SET msg = concat('Probujesz ustawic wartosc pola waga jako ujemną: !',  cast(new.waga AS CHAR));
        signal sqlstate '45000' set message_text = msg;
    END IF;
END $$

Zadanie 2.

CREATE TABLE archiwum_wypraw(id_wyprawy INT PRIMARY KEY, nazwa VARCHAR(60), data_rozpoczecia DATE, data_zakonczenia DATE, kierownik VARCHAR(50));

DELIMITER $$

CREATE TRIGGER wyprawa_arch AFTER DELETE ON wyprawa
FOR EACH ROW
BEGIN
DECLARE nazwa_kierownika VARCHAR(60);
SELECT nazwa INTO nazwa_kierownika FROM kreatura WHERE idKreatury = old.kierownik;
INSERT INTO archiwum_wypraw VALUES(old.id_wyprawy, old.nazwa, old.data_rozpoczecia, old.data_zakonczenia, nazwa_kierownika);
END$$

Zadanie 3.
1.
DELIMITER $$
CREATE PROCEDURE eliksir_sily(IN idKreatury_zm INT)
BEGIN
UPDATE kreatura SET udzwig = 1.2*udzwig WHERE idKreatury=idKreatury_zm;
END$$

2.
DELIMITER $$
CREATE FUNCTION zwracaj_tekst(tekst VARCHAR(100)) RETURNS VARCHAR(100)
BEGIN
RETURN UPPER(tekst);
END$$


Zadanie 4.
1.
CREATE TABLE system_alarmowy(id_alarmu INT PRIMARY KEY, wiadomosc VARCHAR(50));

2.
DELIMITER $$
CREATE TRIGGER tesciowa AFTER INSERT ON wyprawa
FOR EACH ROW
BEGIN
DECLARE uwaga INT;

SELECT COUNT(*) INTO uwaga
FROM etapy_wyprawy AS e, kreatura AS k, wyprawa AS w, uczestnicy AS u
WHERE e.idWyprawy=w.id_wyprawy AND k.idKreatury=u.id_uczestnika
AND u.id_wyprawy=w.id_wyprawy
AND k.nazwa='Tesciowa' AND e.sektor=7
AND w.id_wyprawy=NEW.id_wyprawy;

IF uwaga>0 THEN
INSERT INTO system_alarmowy VALUES(DEFAULT, 'Tesciowa nadchodzi !!!');
END IF;

END$$


Zadanie 5. 
1.
DELIMITER $$
CREATE PROCEDURE Udzwig(OUT srednia INT, OUT suma INT, OUT maksimum INT) 
BEGIN
SELECT AVG(udzwig) INTO srednia FROM kreatura;
SELECT SUM(udzwig) INTO suma FROM kreatura;
SELECT MAX(udzwig) INTO maksimum FROM kreatura;
END$$

2.
DELIMITER $$
CREATE PROCEDURE blabla (IN id_wyprawy_zm, OUT nrSektora INT, OUT nazwa_zm VARCHAR(50))
BEGIN
SELECT sektor INTO nrSektora FROM etapy_wyprawy WHERE id_wyprawy=id_wyprawy_zm;
SELECT nazwa INTO nazwa_zm FROM  etapy_wyprawy WHERE id_wyprawy=id_wyprawy_zm;



